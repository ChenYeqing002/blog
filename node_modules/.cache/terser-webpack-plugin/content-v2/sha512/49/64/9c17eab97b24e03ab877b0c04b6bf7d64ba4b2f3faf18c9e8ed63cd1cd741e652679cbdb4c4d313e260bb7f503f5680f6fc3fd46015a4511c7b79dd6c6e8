{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{450:function(t,v,r){\"use strict\";r.r(v);var _=r(2),a=Object(_.a)({},(function(){var t=this,v=t._self._c;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h2\",{attrs:{id:\"锁\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#锁\"}},[t._v(\"#\")]),t._v(\" 锁\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"悲观\")])]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"在对资源进行修改之前先上锁, 改完之后再解锁\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"乐观\")])]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"假设没有人跟它竞争资源\")])]),t._v(\" \"),v(\"p\",[t._v(\"git 上传代码\")]),t._v(\" \"),v(\"p\",[t._v(\"version版本号更新记录\")]),t._v(\" \"),v(\"p\",[t._v(\"竞争不激烈的情况下, 并发小的时候, 乐观锁加自旋比悲观锁搞笑\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"自旋\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自旋\"}},[t._v(\"#\")]),t._v(\" 自旋\")]),t._v(\" \"),v(\"p\",[t._v(\"防止CPU进入内核态, 进行空转10次的操作, 看能不能获取到\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"原子类\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原子类\"}},[t._v(\"#\")]),t._v(\" 原子类\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[t._v(\"#\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"线程安全threed-local\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#线程安全threed-local\"}},[t._v(\"#\")]),t._v(\" 线程安全threed local\")]),t._v(\" \"),v(\"p\",[t._v(\"不同的线程对同一个资源进行争抢\")]),t._v(\" \"),v(\"p\",[t._v(\"如果通过thread local把资源一人一份也能避免\")]),t._v(\" \"),v(\"h3\",{attrs:{id:\"syncrnized和reentrantlock\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#syncrnized和reentrantlock\"}},[t._v(\"#\")]),t._v(\" syncrnized和reentrantlock\")]),t._v(\" \"),v(\"p\",[t._v(\"1.6sync没优化之前, reentrantlock效率比sync高\")]),t._v(\" \"),v(\"p\",[t._v(\"sync\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"monitor enter\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"没抢到锁的线程会进行sleep和唤醒, 要切换内核态操作, 抢锁的周期时间很慢, 耗费时间\")])])]),t._v(\" \"),v(\"p\",[t._v(\"1.6优化后(锁升级)\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"锁升级\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"锁消除\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"锁粗化\")])])]),t._v(\" \"),v(\"p\",[t._v(\"4种类型\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"无锁, 没有多线程情况进行锁消除 不需要进行monitor enter\")])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"多线程竞争的时候升级成偏向锁, 一个对象头中的Mark word,记一个线程id,表示它拿到了这把锁, 也不需要走monitor enter\")])]),t._v(\" \"),v(\"li\")]),t._v(\" \"),v(\"p\",[t._v(\"reentrantlock\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"定义一个变量\")])]),t._v(\" \"),v(\"p\",[t._v(\"1:23:00  回顾部分\")])])}),[],!1,null,null,null);v.default=a.exports}}]);","extractedComments":[]}